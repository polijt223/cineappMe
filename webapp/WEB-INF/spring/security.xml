<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:b="http://www.springframework.org/schema/beans" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/security 
     http://www.springframework.org/schema/security/spring-security.xsd">
     
     <!-- Declaramos todos los recursos que estaran protegidos -->
 
 
	
 
   <http auto-config="true" >
		<intercept-url pattern="/peliculas/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
		<intercept-url pattern="/horarios/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
		<intercept-url pattern="/noticias/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
		<intercept-url pattern="/usuarios/*" access="hasAnyAuthority('GERENTE')" />
		<intercept-url pattern="/banners/*" access="hasAnyAuthority('GERENTE')" />
		
		<form-login login-page="/formLogin" default-target-url="/admin/index"/>
		<!-- <form-login login-page="/formLogin" default-target-url="/admin/index"/>  default-taget-url sirve para indicar donde debe dirigirse luego de loguearse-->
	</http>
	  
	
<!-- Declaracion de usuarios en memoria -->
<!-- 
   <authentication-manager>

      <authentication-provider>
		<user-service>
		  <user name="luis" password="{noop}luis123" authorities="EDITOR" />		  
		  <user name="marisol" password="{noop}mari123" authorities="GERENTE" />  
		</user-service>
      </authentication-provider>

   </authentication-manager>
-->

<!-- Autenticacion desde una base de datos por defaul (es decir deberias crear tablas con los nombres que exige spring para buscarlas automaticamente) -->
	<!-- 
	<authentication-manager >
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" />
		</authentication-provider>
	</authentication-manager>
   -->
   
<!--Autenticacion desde una base de datos personalizada -->
	<authentication-manager >
		<authentication-provider>
		<password-encoder ref="passwordEncoder"/>
		<jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select cuenta,pwd,activo from usuarios where cuenta = ? "
			authorities-by-username-query="select cuenta,perfil from perfiles where cuenta = ? " />
		</authentication-provider>
	</authentication-manager>
 
 <b:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />  
   
   
</b:beans>
